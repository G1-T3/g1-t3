services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - docker.env
    environment:
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_SHOW_SQL=true
      - CORS_ALLOWED_ORIGINS=http://localhost:3000
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ~/.m2:/root/.m2
    command: >
      sh -c "
        while ! nc -z db 5432; do
          echo 'Waiting for database to be available...'
          sleep 1
        done
        echo 'Database is available, waiting 5 more seconds for full initialization...'
        sleep 5
        ./mvnw spring-boot:run -Dmaven.test.skip=true
      "

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3000
      - NEXT_PUBLIC_SPRINGBOOT_API_URL=http://localhost:8080
      - NODE_ENV=development      # TODO: Remove this line in production
      - WATCHPACK_POLLING=true    # TODO: Remove this line in production
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - ./.docker/initdb:/docker-entrypoint-initdb.d
    command: npm run dev

  db:
    image: postgres
    env_file:
      - docker.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./.docker/initdb:/docker-entrypoint-initdb.d

volumes:
  pgdata:
